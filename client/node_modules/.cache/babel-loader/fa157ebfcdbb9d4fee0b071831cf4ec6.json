{"ast":null,"code":"import ShopActionTypes from './shop.types';\nimport { firestore, convertCollectionsSnapshotToMap } from '../../firebase/firebase.utils';\nexport const fetchCollectionsStart = collectionsMap => ({\n  type: ShopActionTypes.FETCH_COLLECTIONS_START\n});\nexport const fetchCollectionsSuccess = collectionsMap => ({\n  type: ShopActionTypes.FETCH_COLLECTIONS_SUCCESS,\n  payload: collectionsMap\n});\nexport const fetchCollectionsFailure = errorMesssage => ({\n  type: ShopActionTypes.FETCH_COLLECTIONS_FAILURE,\n  payload: errorMesssage\n});\nexport const fetchCollectionsStartAsync = () => {\n  return dispatch => {\n    const collectionRef = firestore.collection('collections');\n    dispatch(fetchCollectionsStart());\n    collectionRef.get().then(snapshot => {\n      const collectionsMap = convertCollectionsSnapshotToMap(snapshot);\n      dispatch(fetchCollectionsSuccess(collectionsMap));\n    }).catch(error => dispatch(fetchCollectionsFailure(error.message)));\n  };\n};","map":{"version":3,"sources":["H:/newReact/newshop/src/redux/shop/shop.actions.js"],"names":["ShopActionTypes","firestore","convertCollectionsSnapshotToMap","fetchCollectionsStart","collectionsMap","type","FETCH_COLLECTIONS_START","fetchCollectionsSuccess","FETCH_COLLECTIONS_SUCCESS","payload","fetchCollectionsFailure","errorMesssage","FETCH_COLLECTIONS_FAILURE","fetchCollectionsStartAsync","dispatch","collectionRef","collection","get","then","snapshot","catch","error","message"],"mappings":"AACA,OAAOA,eAAP,MAA4B,cAA5B;AAEA,SAASC,SAAT,EAAoBC,+BAApB,QAA2D,+BAA3D;AAEA,OAAO,MAAMC,qBAAqB,GAAIC,cAAD,KAAqB;AACtDC,EAAAA,IAAI,EAAEL,eAAe,CAACM;AADgC,CAArB,CAA9B;AAKP,OAAO,MAAMC,uBAAuB,GAAGH,cAAc,KAAK;AACtDC,EAAAA,IAAI,EAAEL,eAAe,CAACQ,yBADgC;AAEtDC,EAAAA,OAAO,EAAEL;AAF6C,CAAL,CAA9C;AAKP,OAAO,MAAMM,uBAAuB,GAAGC,aAAa,KAAK;AACrDN,EAAAA,IAAI,EAAEL,eAAe,CAACY,yBAD+B;AAErDH,EAAAA,OAAO,EAAEE;AAF4C,CAAL,CAA7C;AAMP,OAAO,MAAME,0BAA0B,GAAG,MAAM;AAC5C,SAAOC,QAAQ,IAAI;AACf,UAAMC,aAAa,GAAGd,SAAS,CAACe,UAAV,CAAqB,aAArB,CAAtB;AACAF,IAAAA,QAAQ,CAACX,qBAAqB,EAAtB,CAAR;AAEAY,IAAAA,aAAa,CAACE,GAAd,GAAoBC,IAApB,CAA0BC,QAAD,IAAc;AACnC,YAAMf,cAAc,GAAGF,+BAA+B,CAACiB,QAAD,CAAtD;AACAL,MAAAA,QAAQ,CAACP,uBAAuB,CAACH,cAAD,CAAxB,CAAR;AAEH,KAJD,EAIGgB,KAJH,CAISC,KAAK,IAAIP,QAAQ,CAACJ,uBAAuB,CAACW,KAAK,CAACC,OAAP,CAAxB,CAJ1B;AAKH,GATD;AAUH,CAXM","sourcesContent":["\r\nimport ShopActionTypes from './shop.types';\r\n\r\nimport { firestore, convertCollectionsSnapshotToMap } from '../../firebase/firebase.utils';\r\n\r\nexport const fetchCollectionsStart = (collectionsMap) => ({\r\n    type: ShopActionTypes.FETCH_COLLECTIONS_START,\r\n\r\n});\r\n\r\nexport const fetchCollectionsSuccess = collectionsMap => ({\r\n    type: ShopActionTypes.FETCH_COLLECTIONS_SUCCESS,\r\n    payload: collectionsMap,\r\n});\r\n\r\nexport const fetchCollectionsFailure = errorMesssage => ({\r\n    type: ShopActionTypes.FETCH_COLLECTIONS_FAILURE,\r\n    payload: errorMesssage\r\n})\r\n\r\n\r\nexport const fetchCollectionsStartAsync = () => {\r\n    return dispatch => {\r\n        const collectionRef = firestore.collection('collections');\r\n        dispatch(fetchCollectionsStart());\r\n\r\n        collectionRef.get().then((snapshot) => {\r\n            const collectionsMap = convertCollectionsSnapshotToMap(snapshot);\r\n            dispatch(fetchCollectionsSuccess(collectionsMap));\r\n\r\n        }).catch(error => dispatch(fetchCollectionsFailure(error.message)));\r\n    }\r\n}\r\n\r\n"]},"metadata":{},"sourceType":"module"}